<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vyxVC+VUe1cCgG49Ol2RqkVyyr04AUCXHpN6XPxbd0sA0J3HpStTtThOvU8mAOhOz4t/63kJALryhHR1
        qhbGHmq3M94vAUA3Hp+uStXC2EsvTADQjSena1K1KPbS59JeCQC68JTU++J/bXpgAoAu/Exqi1+1KPbU
        yxIAdOFpyeK/svK2tFsCgMl7ZrouVQtiT30w7ZMAYPKeniz+KysnpH0TAEzec9L1qVoQe+qdyRH/AHSh
        XeHO4r+y8o5k8QegC7+QLP4rK29PeyYAmLxfTN9J1YLYU+1of4s/AF14frL4r6y8NVn8AejCi5LFf2Xl
        LcniD7Bg7YIrh6Xnptek96fPpi99ry+kv0/Hp5endoOaAxLr8+JULYa99Wdp98TG7JHuku6bHpmOkjTq
        HpLunQ5Oo3F4enU6J1U76l3VrlZ3Unp2Mgys7aWpehx76w3J4r8+t0jt8tCvS59OPd8aWlr2vplOTa9M
        j0ptoJ+rR6QT01a9FN026BXpoMRN/ddUPW691RYwi/9w7VlDO07iilQ9npKWvwtSeyL+g2lbHZrelapf
        Yiu6OLUD3Ozk/9Wvp+qx6q321pJr+w/z4HRyqh5HSdOs3f21vT16x7TlnpG+laofvNV9JG3LRiyZY1L1
        +PTWHyWL/9pulf40OUhU6rdLUztYfEueSLf3F/44VT9oO/taeljqVXtLpHpceuvYZPFf2/1SO+C2egwl
        9deH0u3ThrU7qr07Vd98HrX3Lo9OvWkHd1SPR2/9XrL4r+1J6cpUPYaS+u0rqR2sv27tHOu/SNU3nWft
        fY2fSr347VQ9Dr31u4m1tStCuhy0pNW6KLVTCNelnW5VfbNF1E5b+ndp6tqRnNX291Ybglhbe+bvFtCS
        1urCdI80SLugT/VNFlkbAh6Xpqi9zP37qdru3vqdxNoemJzPL2loZ6YD0y7dLY31vOHLUzu3eUra4t8O
        dKu2t7fagY+s7Zbp7FQ9hpK0Wu3mabv0vlR94VhqpyI+IE1BW/z/IFXb2Vu/lRimnetbPYaStFZPTaWf
        TNUXjK12waAj0zJri/9rU7V9vdUudsQw7SI/zvOXtNHOS/unm2jXF66+YIy1IxvvlZZRW/wXcW2FMWbx
        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
        rkJggg==
</value>
  </data>
</root>